plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// * This code is generated by github copilot to provide the [GoogleMapsApiKey] to the AndroidManifest.xml file
def loadLocalProperties() {
    def properties = new Properties()
    def propertiesFile = rootProject.file('local.properties')
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newDataInputStream())
    }
    return properties
}

def localProperties = loadLocalProperties()

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
}
// * Till this point

android {
    namespace = "com.example.app"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 21
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        // * This code is generated by github copilot to provide the [GoogleMapsApiKey] to the AndroidManifest.xml file
        manifestPlaceholders = [
            MAPS_API_KEY: localProperties.getProperty('MAPS_API_KEY', ''),
            applicationName: "androidx.multidex.MultiDexApplication"

        ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
